apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.qonversion.android.sdk"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 10
        versionName "1.0.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            File propertiesFile = project.rootProject.file('local.properties')
            if (propertiesFile.exists()) {
                Properties properties = new Properties()
                properties.load(propertiesFile.newDataInputStream())
                storeFile file(properties.getProperty('storeFile'))
                keyAlias properties.getProperty('keyAlias')
                storePassword properties.getProperty('storePassword')
                keyPassword properties.getProperty('keyPassword')
            }

        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt', 'proguard-google-api-client.txt'
            signingConfig signingConfigs.release
            buildConfigField "String", "QONVERSION_API_KEY", getProps("qonversion_api_key")
            buildConfigField "String", "AF_DEV_KEY", getProps("appsflyer_api_key")
        }
        debug {
            buildConfigField "String", "QONVERSION_API_KEY", getProps("qonversion_api_key")
            buildConfigField "String", "AF_DEV_KEY", getProps("appsflyer_api_key")
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return ""
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar',  '*.aar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'androidx.multidex:multidex:2.0.1'


    implementation 'com.android.billingclient:billing:2.2.0'
    implementation 'com.appsflyer:af-android-sdk:5.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.android.support:multidex:1.0.3'

    implementation project(':sdk')
}
